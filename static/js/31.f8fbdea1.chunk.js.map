{"version":3,"sources":["components/layouts/Relatedproductone.js","../node_modules/swiper/esm/components/navigation/navigation.js","components/sections/menu-item-v1/Content.js","components/pages/Menuitemone.js","components/layouts/Breadcrumb.js","helper/helper.js","helper/Producthelper.js","components/layouts/Quickview.js"],"names":["Relatedproduct","_Component","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","state","modalshow","lastActiveBox","modalShow","bind","_assertThisInitialized","modalClose","_inherits","_createClass","key","value","index","setState","_this2","React","createElement","className","products","slice","map","item","i","Link","to","id","src","process","img","alt","name","Rating","rating","shortdesc","Intl","NumberFormat","format","price","toFixed","type","onClick","e","Modal","show","onHide","aria-labelledby","size","centered","Quickview","productId","Component","_extends","Object","assign","target","arguments","length","source","prototype","hasOwnProperty","apply","Navigation","toggleEl","$el","disabled","params","navigation","disabledClass","tagName","update","loop","_swiper$navigation","$nextEl","$prevEl","isBeginning","watchOverflow","isLocked","lockClass","isEnd","onPrevClick","preventDefault","slidePrev","onNextClick","slideNext","init","nextEl","prevEl","dom","uniqueNavElements","find","on","utils","destroy","_swiper$navigation2","off","removeClass","hideOnClick","hiddenClass","create","swiper","toEdge","fromEdge","click","_swiper$navigation3","targetEl","is","pagination","clickable","el","contains","isHidden","hasClass","emit","toggleClass","SwiperCore","use","Autoplay","Content","IncrementItem","clicks","DecreaseItem","event","getProduct","Fragment","Swiper","spaceBetween","slidesPerView","onSlideChange","console","log","onSwiper","autoplay","delay","SwiperSlide","img2","img3","img4","productsafetyimg1","productsafetyimg2","productsafetyimg3","productsafetyimg4","bulletpoints","categoryItem","keys","propertyKey","href","urls","Tab","Container","defaultActiveKey","Nav","variant","Item","eventKey","reviews","Pane","dangerouslySetInnerHTML","__html","longdescription","method","placeholder","rows","review","date","comment","Menuitemone","MetaTags","content","Header","Breadcrumbs","breadcrumb","pagename","bannerimg","match","Footer","footer","style","logo","Breadcrumb","backgroundImage","concat","aria-label","aria-current","__webpack_require__","d","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","stars","push","_data_product_json__WEBPACK_IMPORTED_MODULE_0__","filter","product","parseInt","Body","attributes","icon","items","add","title","htmlFor","addprice","item1"],"mappings":"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","file":"static/js/31.f8fbdea1.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Modal } from 'react-bootstrap';\r\nimport Quickview from './Quickview';\r\nimport products from \"../../data/product.json\";\r\nimport { Rating } from \"../../helper/helper\";\r\n\r\nclass Relatedproduct extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modalshow: false,\r\n            lastActiveBox: -1,\r\n        };\r\n        this.modalShow = this.modalShow.bind(this);\r\n        this.modalClose = this.modalClose.bind(this);\r\n    }\r\n    // Modal\r\n    modalShow(index) {\r\n        this.setState({ modalshow: true, lastActiveBox: index });\r\n    }\r\n    modalClose() {\r\n        this.setState({ modalshow: false });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"section section-padding related-products pt-0\">\r\n                <div className=\"container\">\r\n                    <h3>You might also like</h3>\r\n                    <div className=\"row menu-v2\">\r\n                        {/* Product Start */}\r\n                        {products.slice(0, 3).map((item, i) => (\r\n                            <div key={i} className=\"col-lg-4 col-md-6\">\r\n                                <div className=\"product\">\r\n                                    <div className=\"favorite\">\r\n                                        <i className=\"far fa-heart\" />\r\n                                    </div>\r\n                                    <Link className=\"product-thumb\" to={\"/menu-item-v1/\" + item.id}>\r\n                                        <img src={process.env.PUBLIC_URL + \"/\" + item.img} alt={item.name} />\r\n                                    </Link>\r\n                                    <div className=\"product-body\">\r\n                                        <div className=\"product-desc\">\r\n                                            <h4> <Link to={\"/menu-item-v1/\" + item.id}>{item.name}</Link></h4>\r\n                                            <div className=\"ct-rating-wrapper\">\r\n                                                <div className=\"ct-rating\">\r\n                                                    {Rating(item.rating)}\r\n                                                </div>\r\n                                            </div>\r\n                                            <p>{item.shortdesc}</p>\r\n                                         \r\n                                        </div>\r\n                                        <div className=\"product-controls\">\r\n                                            <p className=\"product-price\">{new Intl.NumberFormat().format((item.price).toFixed(2))}$</p>\r\n                                            {/* <Link to={\"/menu-item-v1/\" + item.id} className=\"order-item btn-custom btn-sm shadow-none\">Order <i className=\"fas fa-shopping-cart\" /> </Link> */}\r\n                                            <button type=\"button\" className=\"order-item btn-custom btn-sm shadow-none\" onClick={(e) => this.modalShow(item.id)}> More info<i className=\"fas fa-plus\" /> </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                        {/* Product End */}\r\n                    </div>\r\n                </div>\r\n                <Modal show={this.state.modalshow} id=\"customizeModal\" onHide={this.modalClose} aria-labelledby=\"contained-modal-title-vcenter\" size=\"lg\" centered>\r\n                    <Quickview productId={this.state.lastActiveBox} />\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Relatedproduct;","function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport $ from '../../utils/dom';\nimport { extend, bindModuleMethods } from '../../utils/utils';\nvar Navigation = {\n  toggleEl: function toggleEl($el, disabled) {\n    $el[disabled ? 'addClass' : 'removeClass'](this.params.navigation.disabledClass);\n    if ($el[0] && $el[0].tagName === 'BUTTON') $el[0].disabled = disabled;\n  },\n  update: function update() {\n    // Update Navigation Buttons\n    var swiper = this;\n    var params = swiper.params.navigation;\n    var toggleEl = swiper.navigation.toggleEl;\n    if (swiper.params.loop) return;\n    var _swiper$navigation = swiper.navigation,\n      $nextEl = _swiper$navigation.$nextEl,\n      $prevEl = _swiper$navigation.$prevEl;\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        toggleEl($prevEl, true);\n      } else {\n        toggleEl($prevEl, false);\n      }\n      $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        toggleEl($nextEl, true);\n      } else {\n        toggleEl($nextEl, false);\n      }\n      $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  },\n  onPrevClick: function onPrevClick(e) {\n    var swiper = this;\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop) return;\n    swiper.slidePrev();\n  },\n  onNextClick: function onNextClick(e) {\n    var swiper = this;\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop) return;\n    swiper.slideNext();\n  },\n  init: function init() {\n    var swiper = this;\n    var params = swiper.params.navigation;\n    if (!(params.nextEl || params.prevEl)) return;\n    var $nextEl;\n    var $prevEl;\n    if (params.nextEl) {\n      $nextEl = $(params.nextEl);\n      if (swiper.params.uniqueNavElements && typeof params.nextEl === 'string' && $nextEl.length > 1 && swiper.$el.find(params.nextEl).length === 1) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n    if (params.prevEl) {\n      $prevEl = $(params.prevEl);\n      if (swiper.params.uniqueNavElements && typeof params.prevEl === 'string' && $prevEl.length > 1 && swiper.$el.find(params.prevEl).length === 1) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', swiper.navigation.onNextClick);\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', swiper.navigation.onPrevClick);\n    }\n    extend(swiper.navigation, {\n      $nextEl: $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl: $prevEl,\n      prevEl: $prevEl && $prevEl[0]\n    });\n  },\n  destroy: function destroy() {\n    var swiper = this;\n    var _swiper$navigation2 = swiper.navigation,\n      $nextEl = _swiper$navigation2.$nextEl,\n      $prevEl = _swiper$navigation2.$prevEl;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click', swiper.navigation.onNextClick);\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click', swiper.navigation.onPrevClick);\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  }\n};\nexport default {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock'\n    }\n  },\n  create: function create() {\n    var swiper = this;\n    bindModuleMethods(swiper, {\n      navigation: _extends({}, Navigation)\n    });\n  },\n  on: {\n    init: function init(swiper) {\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge: function toEdge(swiper) {\n      swiper.navigation.update();\n    },\n    fromEdge: function fromEdge(swiper) {\n      swiper.navigation.update();\n    },\n    destroy: function destroy(swiper) {\n      swiper.navigation.destroy();\n    },\n    click: function click(swiper, e) {\n      var _swiper$navigation3 = swiper.navigation,\n        $nextEl = _swiper$navigation3.$nextEl,\n        $prevEl = _swiper$navigation3.$prevEl;\n      var targetEl = e.target;\n      if (swiper.params.navigation.hideOnClick && !$(targetEl).is($prevEl) && !$(targetEl).is($nextEl)) {\n        if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;\n        var isHidden;\n        if ($nextEl) {\n          isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n        } else if ($prevEl) {\n          isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n        }\n        if (isHidden === true) {\n          swiper.emit('navigationShow');\n        } else {\n          swiper.emit('navigationHide');\n        }\n        if ($nextEl) {\n          $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n        if ($prevEl) {\n          $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n      }\n    }\n  }\n};","import React, { Component, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { getProduct } from '../../../helper/Producthelper';\r\nimport { Rating } from \"../../../helper/helper\";\r\n// import productcategory from \"../../../data/productcategory.json\";\r\n// import blogtags from '../../../data/blogtags.json';\r\nimport { Tab, Nav } from \"react-bootstrap\";\r\nimport Relatedproduct from '../../layouts/Relatedproductone';\r\n\r\n// swiperjs\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\n\r\n// // Styles must use direct files imports\r\n// import 'swiper/swiper.scss'; // core Swiper\r\n// import 'swiper/modules/navigation/navigation.scss'; // Navigation module\r\n// import 'swiper/modules/pagination/pagination.scss'; // Pagination module\r\n\r\nimport 'swiper/swiper-bundle.css';\r\nimport SwiperCore ,{ Navigation } from 'swiper'\r\nimport { Autoplay } from 'swiper';\r\n\r\nSwiperCore.use([Autoplay]);\r\nSwiperCore.use([Navigation]);\r\n\r\nclass Content extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            clicks: 1\r\n        };\r\n    }\r\n    IncrementItem = () => {\r\n        this.setState({ clicks: this.state.clicks + 1 });\r\n    };\r\n\r\n    DecreaseItem = () => {\r\n        if (this.state.clicks < 1) {\r\n            this.setState({\r\n                clicks: 0,\r\n            });\r\n        } else {\r\n            this.setState({\r\n                clicks: this.state.clicks - 1,\r\n            });\r\n        }\r\n    };\r\n    handleChange(event) {\r\n        this.setState({ clicks: event.target.value });\r\n    }\r\n    render() {\r\n        const productId = this.props.productId;\r\n        const item = getProduct(productId);\r\n        return (\r\n            <Fragment>\r\n                <div className=\"section product-single\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-5\">\r\n                                {/* Main Thumb */}\r\n                                <div className=\"product-thumb\">\r\n                                    <Swiper\r\n                                            spaceBetween={50}\r\n                                            slidesPerView={1}\r\n                                            onSlideChange={() => console.log('slide change')}\r\n                                            onSwiper={(swiper) => console.log(swiper)}\r\n                                            autoplay={{ delay: 4000 }}\r\n                                            loop={true}\r\n                                            navigation={true}\r\n                                            // pagination={{ clickable: true }} \r\n                                            >\r\n                                            <SwiperSlide><img src={process.env.PUBLIC_URL + \"/\" + item.img} alt={item.name} /></SwiperSlide>\r\n                                            <SwiperSlide><img src={process.env.PUBLIC_URL + \"/\" + item.img2} alt={item.name} /></SwiperSlide>\r\n                                            <SwiperSlide><img src={process.env.PUBLIC_URL + \"/\" + item.img3} alt={item.name} /></SwiperSlide>\r\n                                            <SwiperSlide><img src={process.env.PUBLIC_URL + \"/\" + item.img4} alt={item.name} /></SwiperSlide>\r\n                                            \r\n                                    </Swiper>\r\n                                    {/* <img src={process.env.PUBLIC_URL + \"/\" + item.img} alt={item.name} /> */}\r\n                                </div>\r\n                                {/* /Main Thumb */}\r\n                            </div>\r\n                            <div className=\"col-md-7\">\r\n                                <div className=\"product-content\">\r\n                                    {/* Product Title */}\r\n                                    <h2 className=\"title\">{item.name}</h2>\r\n                                    {/* /Product Title */}\r\n                                    <div className=\"favorite\">\r\n                                        <i className=\"far fa-heart\" />\r\n                                    </div>\r\n                                    {/* Rating */}\r\n                                    <div className=\"ct-rating-wrapper\">\r\n                                        <div className=\"ct-rating\">\r\n                                            {Rating(item.rating)}\r\n                                        </div>\r\n                                        <span>(24 ratings)</span>\r\n                                    </div>\r\n                                    {/* /Rating */}\r\n                                \r\n                                    {/* Product Short Description */}\r\n                                    <p>{item.shortdesc}</p>\r\n                                \r\n                                    {/* Price */}\r\n                                        <div className=\"price-wrapper\">\r\n                                        <p className=\"product-price\">{new Intl.NumberFormat().format((item.price).toFixed(2))}₹</p>\r\n                                    </div>\r\n                                    {/* /Price */}\r\n                                    {/* Variations */}\r\n                                    <div className=\"customize-variations\">\r\n                                        <div className=\"customize-size-wrapper\">\r\n                                            <div className=\"ct-rating\">\r\n                                                <img src={process.env.PUBLIC_URL + \"/\" + item.productsafetyimg1} alt={item.name} />\r\n                                                <img src={process.env.PUBLIC_URL + \"/\" + item.productsafetyimg2} alt={item.name} />\r\n                                                <img src={process.env.PUBLIC_URL + \"/\" + item.productsafetyimg3} alt={item.name} />\r\n                                                <img src={process.env.PUBLIC_URL + \"/\" + item.productsafetyimg4} alt={item.name} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                       {/*  <div className=\"row\">\r\n                                            \r\n                                            {item.attributes.map((item, i) => (\r\n                                                <div key={i} className=\"col-lg-6 col-12\">\r\n                                                    <div className=\"customize-variation-wrapper\">\r\n                                                        <i className={item.icon} />\r\n                                                        <h5>{item.name}</h5>\r\n                                                        {item.items.map((add, i) => (\r\n                                                            <div key={i} className=\"customize-variation-item\">\r\n                                                                <div className={\"custom-control custom-\" }>\r\n                                                                    <input type={item.type} id={add.title + i} name={item.name} className=\"custom-control-input\" />\r\n                                                                    <label className=\"custom-control-label\" htmlFor={add.title + i}>{add.title}</label>\r\n                                                                </div>\r\n                                                                <span>{new Intl.NumberFormat().format((add.addprice).toFixed(2))}</span>\r\n                                                            </div>\r\n                                                        ))}\r\n                                                    </div>\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    </div> */}\r\n                                    {/* /Variations */}\r\n                                    {/* Add To Cart Form */}\r\n                                    {/* <form className=\"atc-form\" method=\"post\">\r\n                                        <div className=\"form-group\">\r\n                                            <label>Quantity</label>\r\n                                            <div className=\"qty\">\r\n                                                <span className=\"qty-subtract\" onClick={this.DecreaseItem}><i className=\"fa fa-minus\" /></span>\r\n                                                <input type=\"text\" name=\"clicks\" value={this.state.clicks} onChange={this.handleChange.bind(this)} />\r\n                                                <span className=\"qty-add\" onClick={this.IncrementItem}><i className=\"fa fa-plus\" /></span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <button type=\"submit\" name=\"button\" className=\"btn-custom secondary\"> Order <i className=\"fas fa-shopping-cart\" /> </button>\r\n                                    </form> */}\r\n                                    {/* /Add To Cart Form */}\r\n                                    {/* Product Meta */}\r\n                                    <ul className=\"product-meta\">\r\n                                        <li>\r\n                                            {/* <span>About this item: </span> */}\r\n                                            {/* <div className=\"product-meta-item\"> */}\r\n                                            {/* {item.category.map((item, i) => (\r\n                                                <div key={i} className={item.state ? 'customize-size active' : 'customize-size'}>\r\n                                                    {item.size}\"\r\n                                                </div>\r\n                                            ))} */}\r\n                                        \r\n                                        {item.bulletpoints.map((categoryItem, index) => (\r\n                                            <div key={index}>\r\n                                                <span className='about-product-span'>About this item</span>\r\n                                                {Object.keys(categoryItem).map((propertyKey) => (\r\n                                                <p key={propertyKey} className='about-product-p'>\r\n                                                    <span className='product-span'>{propertyKey}</span>: {categoryItem[propertyKey]}\r\n                                                </p>\r\n                                                ))}\r\n                                            </div>\r\n                                            ))}\r\n                                                                     \r\n                                        </li>\r\n                                        <button type=\"button\" className=\"btn-custom btn-sm order-btn\">\r\n                                        <a href={item.urls} target='_blank'>Order Now</a>\r\n                                            </button>\r\n                                    </ul>\r\n                                    {/* /Product Meta */}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"section pt-0\">\r\n                    <div className=\"container\">\r\n                        {/* Additional Information Start */}\r\n                        <div className=\"product-additional-info\">\r\n                            <Tab.Container defaultActiveKey=\"tab1\">\r\n                                <Nav variant=\"tabs\" className=\"nav\">\r\n                                    <Nav.Item>\r\n                                        <Nav.Link eventKey=\"tab1\">Description</Nav.Link>\r\n                                    </Nav.Item>\r\n                                    <Nav.Item>\r\n                                        <Nav.Link eventKey=\"tab2\">Reviews ({item.reviews.length})</Nav.Link>\r\n                                    </Nav.Item>\r\n                                </Nav>\r\n                                <Tab.Content>\r\n                                    <Tab.Pane eventKey=\"tab1\">\r\n                                        <h4>Description</h4>\r\n                                        <div dangerouslySetInnerHTML={{ __html: item.longdescription }} />\r\n                                    </Tab.Pane>\r\n                                    <Tab.Pane eventKey=\"tab2\">\r\n                                        <h4>Leave a Review</h4>\r\n                                        <div className=\"ct-rating-wrapper\">\r\n                                            <div className=\"ct-rating\">\r\n                                                <i className=\"fas fa-star\" />\r\n                                                <i className=\"fas fa-star\" />\r\n                                                <i className=\"fas fa-star\" />\r\n                                                <i className=\"fas fa-star\" />\r\n                                                <i className=\"fas fa-star\" />\r\n                                            </div>\r\n                                            <span>Your Review</span>\r\n                                        </div>\r\n                                        {/* Review Form start */}\r\n                                        <div className=\"comment-form\">\r\n                                            <form method=\"post\">\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-md-6 form-group\">\r\n                                                        <input type=\"text\" className=\"form-control\" placeholder=\"Full Name\" name=\"fname\" />\r\n                                                    </div>\r\n                                                    <div className=\"col-md-6 form-group\">\r\n                                                        <input type=\"email\" className=\"form-control\" placeholder=\"Email Address\" name=\"email\" />\r\n                                                    </div>\r\n                                                    <div className=\"col-md-12 form-group\">\r\n                                                        <textarea className=\"form-control\" placeholder=\"Type your comment...\" name=\"comment\" rows={7} />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <button type=\"submit\" className=\"btn-custom primary\" name=\"button\">Post Review</button>\r\n                                            </form>\r\n                                        </div>\r\n                                        {/* Review Form End */}\r\n                                        {/* Reviews Start */}\r\n                                        <div className=\"comments-list\">\r\n                                            <ul>\r\n                                                {item.reviews.map((review, i) => (\r\n                                                    <li key={i} className=\"comment-item\">\r\n                                                        <img src={process.env.PUBLIC_URL + \"/\" + review.img} alt={review.name} />\r\n                                                        <div className=\"comment-body\">\r\n                                                            <h5>{review.name}</h5>\r\n                                                            <div className=\"ct-rating\">\r\n                                                                {Rating(item.rating)}\r\n                                                            </div>\r\n                                                            <span>Posted on: {review.date}</span>\r\n                                                            <p>{review.comment}College in Virginia</p>\r\n                                                            <Link to=\"#\" className=\"reply-link\"> Reply </Link>\r\n                                                        </div>\r\n                                                    </li>\r\n                                                ))}\r\n                                            </ul>\r\n                                        </div>\r\n                                        {/* Reviews End */}\r\n                                    </Tab.Pane>\r\n                                </Tab.Content>\r\n                            </Tab.Container>\r\n                        </div>\r\n                        {/* Additional Information End */}\r\n                    </div>\r\n                </div>\r\n                <Relatedproduct />\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Content;","import React, { Component, Fragment } from 'react';\r\nimport MetaTags from \"react-meta-tags\";\r\n// import Header from '../layouts/Headerinner';\r\nimport Header from '../layouts/Header';\r\nimport Breadcrumbs from '../layouts/Breadcrumb';\r\nimport Footer from '../layouts/Footer';\r\nimport Content from '../sections/menu-item-v1/Content';\r\n\r\nconst pagelocation = 'Tenali Double Horse'\r\nconst bannerimg = \"/assets/img/banner/contact-header-banner.jpeg\"\r\nclass Menuitemone extends Component {\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <MetaTags>\r\n                    <title>Tenali  doublehorse | {pagelocation}</title>\r\n                    <meta\r\n                        name=\"description\"\r\n                        content=\"#\"\r\n                    />\r\n                </MetaTags> \r\n                <Header/>\r\n                <Breadcrumbs breadcrumb={{ pagename: pagelocation,bannerimg:bannerimg }} />\r\n                <Content productId={this.props.match.params.id}/>\r\n                <Footer footer={{ style:\"ct-footer footer-dark\", logo:\"assets/img/transparent-logo.png\" }} />\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menuitemone;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Breadcrumb extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"sub-header-breadcrumbs \" style={{ backgroundImage: `url(${process.env.PUBLIC_URL}${this.props.breadcrumb.bannerimg})` }}>\r\n                <div className=\"container\">\r\n                    <div className=\"subheader-inner\">\r\n                        <h1 className='text-light'>{this.props.breadcrumb.pagename}</h1>\r\n                        <nav aria-label=\"breadcrumb\">\r\n                            <ol className=\"breadcrumb\">\r\n                                <li className=\"breadcrumb-item \"><Link to=\"/\">Home</Link></li>\r\n                                <li className=\"breadcrumb-item active \" aria-current=\"page\">{this.props.breadcrumb.pagename}</li>\r\n                            </ol>\r\n                        </nav>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Breadcrumb;","import React from 'react';\r\n\r\nfunction Rating(rating) {\r\n    let stars = [];\r\n    for (let i = 0; i < 5; i++) {\r\n        stars.push(<i className=\"fa fa-star\" key={i}></i>);\r\n    }\r\n    if (rating && rating > 0) {\r\n        for (let i = 0; i <= rating ; i++) {\r\n            stars[i] = <i className=\"fa fa-star active\" key={i}></i>;\r\n        }\r\n    }\r\n    return stars;\r\n}\r\nexport { Rating };\r\n","import products from \"../data/product.json\";\r\n\r\nfunction getProduct(id) {\r\n    return products.filter(product => { return product.id === parseInt(id) })[0];\r\n}\r\n\r\n\r\nexport { getProduct };","import React, { Component, Fragment } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { getProduct } from '../../helper/Producthelper'\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\n// Import Swiper styles\r\n// import 'swiper/swiper.min.css';\r\nimport 'swiper/swiper-bundle.css';\r\nimport SwiperCore from 'swiper'\r\nimport { Autoplay } from 'swiper';\r\n\r\nSwiperCore.use([Autoplay]);\r\n\r\nclass Quickview extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            clicks: 1\r\n        };\r\n    }\r\n    IncrementItem = () => {\r\n        this.setState({ clicks: this.state.clicks + 1 });\r\n    };\r\n\r\n    DecreaseItem = () => {\r\n        if (this.state.clicks < 1) {\r\n            this.setState({\r\n                clicks: 0,\r\n            });\r\n        } else {\r\n            this.setState({\r\n                clicks: this.state.clicks - 1,\r\n            });\r\n        }\r\n    };\r\n    handleChange(event) {\r\n        this.setState({ clicks: event.target.value });\r\n    }\r\n    render() {\r\n        const productId = this.props.productId;\r\n        const item = getProduct(productId);\r\n        return (\r\n            <Fragment> \r\n                {/* <Modal.Header className=\"modal-bg mt-5 bg-warning\" closeButton style={{ backgroundImage: \"url(\" + process.env.PUBLIC_URL + \"/\" + item.img + \")\" }} /> */}\r\n                <Modal.Body>\r\n                    <div className=\"customize-meta product-popup-section \">\r\n                        <div className='popup-product-image-sec'>\r\n                        <Swiper\r\n                            spaceBetween={10}\r\n                            slidesPerView={1}\r\n                            onSlideChange={() => console.log('slide change')}\r\n                            onSwiper={(swiper) => console.log(swiper)}\r\n                            autoplay={{ delay: 1000 }}\r\n                            loop={true}\r\n                            >\r\n                            <SwiperSlide><img className=\"pr-pop-up-image\" src={process.env.PUBLIC_URL + \"/\" + item.img} alt={item.name} /></SwiperSlide>\r\n                            <SwiperSlide><img className=\"pr-pop-up-image\" src={process.env.PUBLIC_URL + \"/\" + item.img2} alt={item.name} /></SwiperSlide>\r\n                            <SwiperSlide><img className=\"pr-pop-up-image\" src={process.env.PUBLIC_URL + \"/\" + item.img3} alt={item.name} /></SwiperSlide>\r\n                            <SwiperSlide><img className=\"pr-pop-up-image\" src={process.env.PUBLIC_URL + \"/\" + item.img4} alt={item.name} /></SwiperSlide>\r\n                          \r\n                        </Swiper>\r\n                        {/* <img className=\"product-pop-up-img\" src={process.env.PUBLIC_URL + \"/\" + item.img}  /> */}\r\n                        </div>\r\n                        <div>\r\n                          <div className=''>\r\n                          <h4 className=\"customize-title\">{item.name}  </h4>\r\n                          <p>{item.shortdesc}</p>\r\n                          <h5><span className=\"custom-primary\">{new Intl.NumberFormat().format((item.price).toFixed(2))}₹</span></h5>\r\n                          <button type=\"button\" className=\"btn-custom btn-sm \">Order Now</button>   \r\n                          {/* <button type=\"button\" className=\"btn-custom btn-sm \">Order Now</button> */}\r\n                          </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <div className=\"customize-variations\">\r\n                        {/* <div className=\"customize-size-wrapper\">\r\n                            <h5>Size: </h5>\r\n                            {item.sizes.map((item, i) => (\r\n                                <div key={i} className={item.state ? 'customize-size active' : 'customize-size'}>\r\n                                    {item.size}\r\n                                </div>\r\n                            ))}\r\n                        </div> */}\r\n                        <div className=\"row\">\r\n                          \r\n                                {item.attributes.slice(0,3).map((item, i) => (\r\n                                    <div key={i} className=\"col-lg-4 col-12\">\r\n                                        <div className=\"customize-variation-wrapper\">\r\n                                            <i className={item.icon} />\r\n                                            <h5>{item.name}</h5>\r\n                                            {item.items.map((add, i) => (\r\n                                                <div key={i} className=\"customize-variation-item\">\r\n                                                    <div className={\"custom-control custom-\" + item.type}>\r\n                                                        <input type={item.type} id={add.title + i} name={item.name} className=\"custom-control-input\" />\r\n                                                        <label className=\"custom-control-label\" htmlFor={add.title + i}>{add.title}</label>\r\n                                                    </div>\r\n                                                    <span>+{new Intl.NumberFormat().format((add.addprice).toFixed(2))}$</span>\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    </div>   \r\n                                ))}\r\n                                {item.attributes.slice(0,3).map((item1, i) => (\r\n                                    <div key={i} className=\"col-lg-8 col-12\">\r\n                                         <div>\r\n                                            <h4>Description</h4>\r\n                                            <p>{item.longdescription}</p>\r\n                                         </div>\r\n                                         <div>\r\n                                            {/* <h4>About this item</h4> */}\r\n                                            {item.bulletpoints.map((categoryItem, index) => (\r\n                                            <div key={index}>\r\n                                                <span className='about-product-span'>About this item</span>\r\n                                                {Object.keys(categoryItem).map((propertyKey) => (\r\n                                                <p key={propertyKey} className='about-product-p'>\r\n                                                    <span className='product-span'>{propertyKey}</span>: {categoryItem[propertyKey]}\r\n                                                </p>\r\n                                                ))}\r\n                                            </div>\r\n                                            ))}\r\n                                         </div>\r\n                                    </div>\r\n                                ))}\r\n                        </div>\r\n                    </div>\r\n                    {/* <div className=\"customize-controls\">\r\n                        <div className=\"qty\">\r\n                            <span className=\"qty-subtract\" onClick={this.DecreaseItem}><i className=\"fa fa-minus\" /></span>\r\n                            <input type=\"text\" name=\"clicks\" value={this.state.clicks} onChange={this.handleChange.bind(this)} />\r\n                            <span className=\"qty-add\" onClick={this.IncrementItem}><i className=\"fa fa-plus\" /></span>\r\n                        </div>\r\n                        <div className=\"customize-total\" data-price={new Intl.NumberFormat().format((item.price).toFixed(2))}>\r\n                            <h5>Total Price: <span className=\"final-price custom-primary\">{new Intl.NumberFormat().format((item.price).toFixed(2))} <span>₹</span> </span> </h5>\r\n                        </div>\r\n                    </div> */}\r\n                    {/* <button type=\"button\" className=\"btn-custom btn-sm \">Order Now</button> */}\r\n                </Modal.Body>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Quickview;"],"sourceRoot":""}