{"version":3,"sources":["components/layouts/Relatedproductone.js","components/sections/menu-item-v1/Content.js","components/pages/Menuitemone.js","helper/helper.js","helper/Producthelper.js","components/layouts/Quickview.js"],"names":["Relatedproduct","_Component","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","state","modalshow","lastActiveBox","modalShow","bind","_assertThisInitialized","modalClose","_inherits","_createClass","key","value","index","setState","_this2","React","createElement","className","products","slice","map","item","i","Link","to","id","src","process","img","alt","name","Rating","rating","shortdesc","Intl","NumberFormat","format","price","toFixed","type","onClick","e","Modal","show","onHide","aria-labelledby","size","centered","Quickview","productId","Component","SwiperCore","use","Autoplay","Content","IncrementItem","clicks","DecreaseItem","event","target","getProduct","Fragment","Swiper","spaceBetween","slidesPerView","onSlideChange","console","log","onSwiper","swiper","autoplay","delay","loop","SwiperSlide","img2","img3","img4","category","categoryItem","Object","keys","propertyKey","Tab","Container","defaultActiveKey","Nav","variant","Item","eventKey","Pane","dangerouslySetInnerHTML","__html","longdescription","method","placeholder","rows","reviews","review","date","comment","Menuitemone","apply","arguments","MetaTags","content","Header","Breadcrumbs","breadcrumb","pagename","match","params","Footer","footer","style","logo","__webpack_require__","d","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","stars","push","_data_product_json__WEBPACK_IMPORTED_MODULE_0__","filter","product","parseInt","Body","attributes","icon","items","add","title","htmlFor","addprice","item1"],"mappings":"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","file":"static/js/30.006e3424.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Modal } from 'react-bootstrap';\r\nimport Quickview from './Quickview';\r\nimport products from \"../../data/product.json\";\r\nimport { Rating } from \"../../helper/helper\";\r\n\r\nclass Relatedproduct extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modalshow: false,\r\n            lastActiveBox: -1,\r\n        };\r\n        this.modalShow = this.modalShow.bind(this);\r\n        this.modalClose = this.modalClose.bind(this);\r\n    }\r\n    // Modal\r\n    modalShow(index) {\r\n        this.setState({ modalshow: true, lastActiveBox: index });\r\n    }\r\n    modalClose() {\r\n        this.setState({ modalshow: false });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"section section-padding related-products pt-0\">\r\n                <div className=\"container\">\r\n                    <h3>You might also like</h3>\r\n                    <div className=\"row menu-v2\">\r\n                        {/* Product Start */}\r\n                        {products.slice(0, 3).map((item, i) => (\r\n                            <div key={i} className=\"col-lg-4 col-md-6\">\r\n                                <div className=\"product\">\r\n                                    <div className=\"favorite\">\r\n                                        <i className=\"far fa-heart\" />\r\n                                    </div>\r\n                                    <Link className=\"product-thumb\" to={\"/menu-item-v1/\" + item.id}>\r\n                                        <img src={process.env.PUBLIC_URL + \"/\" + item.img} alt={item.name} />\r\n                                    </Link>\r\n                                    <div className=\"product-body\">\r\n                                        <div className=\"product-desc\">\r\n                                            <h4> <Link to={\"/menu-item-v1/\" + item.id}>{item.name}</Link></h4>\r\n                                            <div className=\"ct-rating-wrapper\">\r\n                                                <div className=\"ct-rating\">\r\n                                                    {Rating(item.rating)}\r\n                                                </div>\r\n                                            </div>\r\n                                            <p>{item.shortdesc}</p>\r\n                                         \r\n                                        </div>\r\n                                        <div className=\"product-controls\">\r\n                                            <p className=\"product-price\">{new Intl.NumberFormat().format((item.price).toFixed(2))}$</p>\r\n                                            {/* <Link to={\"/menu-item-v1/\" + item.id} className=\"order-item btn-custom btn-sm shadow-none\">Order <i className=\"fas fa-shopping-cart\" /> </Link> */}\r\n                                            <button type=\"button\" className=\"order-item btn-custom btn-sm shadow-none\" onClick={(e) => this.modalShow(item.id)}> More info<i className=\"fas fa-plus\" /> </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                        {/* Product End */}\r\n                    </div>\r\n                </div>\r\n                <Modal show={this.state.modalshow} id=\"customizeModal\" onHide={this.modalClose} aria-labelledby=\"contained-modal-title-vcenter\" size=\"lg\" centered>\r\n                    <Quickview productId={this.state.lastActiveBox} />\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Relatedproduct;","import React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getProduct } from '../../../helper/Producthelper';\nimport { Rating } from \"../../../helper/helper\";\nimport productcategory from \"../../../data/productcategory.json\";\nimport blogtags from '../../../data/blogtags.json';\nimport { Tab, Nav } from \"react-bootstrap\";\nimport Relatedproduct from '../../layouts/Relatedproductone';\n\n// swiperjs\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/swiper-bundle.css';\nimport SwiperCore from 'swiper'\nimport { Autoplay } from 'swiper';\n\nSwiperCore.use([Autoplay]);\n\nclass Content extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            clicks: 1\n        };\n    }\n    IncrementItem = () => {\n        this.setState({ clicks: this.state.clicks + 1 });\n    };\n\n    DecreaseItem = () => {\n        if (this.state.clicks < 1) {\n            this.setState({\n                clicks: 0,\n            });\n        } else {\n            this.setState({\n                clicks: this.state.clicks - 1,\n            });\n        }\n    };\n    handleChange(event) {\n        this.setState({ clicks: event.target.value });\n    }\n    render() {\n        const productId = this.props.productId;\n        const item = getProduct(productId);\n        return (\n            <Fragment>\n                <div className=\"section product-single\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-5\">\n                                {/* Main Thumb */}\n                                <div className=\"product-thumb \">\n                                    {/* <div class=\"pic-ctn \">\n                                        <img src={process.env.PUBLIC_URL + \"/\" + item.img} alt=\"\" class=\"pic\"/>\n                                        <img src=\"https://picsum.photos/200/300?t=2\" alt=\"\" class=\"pic\"/>\n                                        <img src=\"https://picsum.photos/200/300?t=3\" alt=\"\" class=\"pic\"/>\n                                        <img src=\"https://picsum.photos/200/300?t=4\" alt=\"\" class=\"pic\"/>\n                                        <img src=\"https://picsum.photos/200/300?t=5\" alt=\"\" class=\"pic\"/>\n                                    </div> */}\n                                    <Swiper\n                                            spaceBetween={50}\n                                            slidesPerView={1}\n                                            onSlideChange={() => console.log('slide change')}\n                                            onSwiper={(swiper) => console.log(swiper)}\n                                            autoplay={{ delay: 4000 }}\n                                            loop={true}\n                                            >\n                                            <SwiperSlide><img src={process.env.PUBLIC_URL + \"/\" + item.img} alt={item.name} /></SwiperSlide>\n                                            <SwiperSlide><img src={process.env.PUBLIC_URL + \"/\" + item.img2} alt={item.name} /></SwiperSlide>\n                                            <SwiperSlide><img src={process.env.PUBLIC_URL + \"/\" + item.img3} alt={item.name} /></SwiperSlide>\n                                            <SwiperSlide><img src={process.env.PUBLIC_URL + \"/\" + item.img4} alt={item.name} /></SwiperSlide>\n                                            \n                                    </Swiper>\n                                    {/* <img src={process.env.PUBLIC_URL + \"/\" + item.img} alt={item.name} /> */}\n                                </div>\n                                {/* /Main Thumb */}\n                            </div>\n                            <div className=\"col-md-7\">\n                                <div className=\"product-content\">\n                                    {/* Product Title */}\n                                    <h2 className=\"title\">{item.name}</h2>\n                                    {/* /Product Title */}\n                                    <div className=\"favorite\">\n                                        <i className=\"far fa-heart\" />\n                                    </div>\n                                    {/* Rating */}\n                                    <div className=\"ct-rating-wrapper\">\n                                        <div className=\"ct-rating\">\n                                            {Rating(item.rating)}\n                                        </div>\n                                        <span>(24 ratings)</span>\n                                    </div>\n                                    {/* /Rating */}\n                                \n                                    {/* Product Short Description */}\n                                    <p>{item.shortdesc}</p>\n                                    {/* /Product Short Description */}\n                                        {/* Price */}\n                                        <div className=\"price-wrapper\">\n                                        <p className=\"product-price\">{new Intl.NumberFormat().format((item.price).toFixed(2))}₹</p>\n                                    </div>\n                                    {/* /Price */}\n                                    {/* Variations */}\n                                    {/* <div className=\"customize-variations\">\n                                        <div className=\"customize-size-wrapper\">\n                                            <h5>Weight: </h5>\n                                            {item.sizes.map((item, i) => (\n                                                <div key={i} className={item.state ? 'customize-size active' : 'customize-size'}>\n                                                    {item.size}\"\n                                                </div>\n                                            ))}\n                                        </div>\n                                        <div className=\"row\">\n                                            \n                                            {item.attributes.map((item, i) => (\n                                                <div key={i} className=\"col-lg-6 col-12\">\n                                                    <div className=\"customize-variation-wrapper\">\n                                                        <i className={item.icon} />\n                                                        <h5>{item.name}</h5>\n                                                        {item.items.map((add, i) => (\n                                                            <div key={i} className=\"customize-variation-item\">\n                                                                <div className={\"custom-control custom-\" }>\n                                                                    <input type={item.type} id={add.title + i} name={item.name} className=\"custom-control-input\" />\n                                                                    <label className=\"custom-control-label\" htmlFor={add.title + i}>{add.title}</label>\n                                                                </div>\n                                                                <span>{new Intl.NumberFormat().format((add.addprice).toFixed(2))}</span>\n                                                            </div>\n                                                        ))}\n                                                    </div>\n                                                </div>\n                                            ))}\n                                        </div>\n                                    </div> */}\n                                    {/* /Variations */}\n                                    {/* Add To Cart Form */}\n                                    {/* <form className=\"atc-form\" method=\"post\">\n                                        <div className=\"form-group\">\n                                            <label>Quantity</label>\n                                            <div className=\"qty\">\n                                                <span className=\"qty-subtract\" onClick={this.DecreaseItem}><i className=\"fa fa-minus\" /></span>\n                                                <input type=\"text\" name=\"clicks\" value={this.state.clicks} onChange={this.handleChange.bind(this)} />\n                                                <span className=\"qty-add\" onClick={this.IncrementItem}><i className=\"fa fa-plus\" /></span>\n                                            </div>\n                                        </div>\n                                        <button type=\"submit\" name=\"button\" className=\"btn-custom secondary\"> Order <i className=\"fas fa-shopping-cart\" /> </button>\n                                    </form> */}\n                                    {/* /Add To Cart Form */}\n                                    {/* Product Meta */}\n                                    <ul className=\"product-meta\">\n                                        <li>\n                                            {/* <span>About this item: </span> */}\n                                            {/* <div className=\"product-meta-item\"> */}\n                                            {/* {item.category.map((item, i) => (\n                                                <div key={i} className={item.state ? 'customize-size active' : 'customize-size'}>\n                                                    {item.size}\"\n                                                </div>\n                                            ))} */}\n                                        \n                                        {item.category.map((categoryItem, index) => (\n                                            <div key={index}>\n                                                <span className='about-product-span'>About this item</span>\n                                                {Object.keys(categoryItem).map((propertyKey) => (\n                                                <p key={propertyKey} className='about-product-p'>\n                                                    <span className='product-span'>{propertyKey}</span>: {categoryItem[propertyKey]}\n                                                </p>\n                                                ))}\n                                            </div>\n                                            ))}\n                                                                     \n                                        </li>\n                                        <button type=\"button\" className=\"btn-custom btn-sm \">Order Now</button>\n                                        {/* <li>\n                                            <span>Tags: </span>\n                                            <div className=\"product-meta-item\">\n                                                {item.tags.slice(0, 4).map((tag) => (\n                                                    blogtags.filter(item => {\n                                                        return item.id === tag\n                                                    }).map((tags, i) => (\n                                                        <Link key={i} to={\"/blog/tag/\" + tags.id}>{tags.title}, </Link>\n                                                    ))\n                                                ))}\n                                            </div>\n                                        </li> \n                                        <li>\n                                            <span>SKU: </span>\n                                            <div className=\"product-meta-item\">\n                                                <span>{item.sku}</span>\n                                            </div>\n                                        </li>*/}\n                                    </ul>\n                                    {/* /Product Meta */}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"section pt-0\">\n                    <div className=\"container\">\n                        {/* Additional Information Start */}\n                        <div className=\"product-additional-info\">\n                            <Tab.Container defaultActiveKey=\"tab1\">\n                                <Nav variant=\"tabs\" className=\"nav\">\n                                    <Nav.Item>\n                                        <Nav.Link eventKey=\"tab1\">Description</Nav.Link>\n                                    </Nav.Item>\n                                    {/* <Nav.Item>\n                                        <Nav.Link eventKey=\"tab2\">Reviews ({item.reviews.length})</Nav.Link>\n                                    </Nav.Item> */}\n                                </Nav>\n                                <Tab.Content>\n                                    <Tab.Pane eventKey=\"tab1\">\n                                        <h4>Description</h4>\n                                        <div dangerouslySetInnerHTML={{ __html: item.longdescription }} />\n                                    </Tab.Pane>\n                                    <Tab.Pane eventKey=\"tab2\">\n                                        <h4>Leave a Review</h4>\n                                        <div className=\"ct-rating-wrapper\">\n                                            <div className=\"ct-rating\">\n                                                <i className=\"fas fa-star\" />\n                                                <i className=\"fas fa-star\" />\n                                                <i className=\"fas fa-star\" />\n                                                <i className=\"fas fa-star\" />\n                                                <i className=\"fas fa-star\" />\n                                            </div>\n                                            <span>Your Review</span>\n                                        </div>\n                                        {/* Review Form start */}\n                                        <div className=\"comment-form\">\n                                            <form method=\"post\">\n                                                <div className=\"row\">\n                                                    <div className=\"col-md-6 form-group\">\n                                                        <input type=\"text\" className=\"form-control\" placeholder=\"Full Name\" name=\"fname\" />\n                                                    </div>\n                                                    <div className=\"col-md-6 form-group\">\n                                                        <input type=\"email\" className=\"form-control\" placeholder=\"Email Address\" name=\"email\" />\n                                                    </div>\n                                                    <div className=\"col-md-12 form-group\">\n                                                        <textarea className=\"form-control\" placeholder=\"Type your comment...\" name=\"comment\" rows={7} />\n                                                    </div>\n                                                </div>\n                                                <button type=\"submit\" className=\"btn-custom primary\" name=\"button\">Post Review</button>\n                                            </form>\n                                        </div>\n                                        {/* Review Form End */}\n                                        {/* Reviews Start */}\n                                        <div className=\"comments-list\">\n                                            <ul>\n                                                {item.reviews.map((review, i) => (\n                                                    <li key={i} className=\"comment-item\">\n                                                        <img src={process.env.PUBLIC_URL + \"/\" + review.img} alt={review.name} />\n                                                        <div className=\"comment-body\">\n                                                            <h5>{review.name}</h5>\n                                                            <div className=\"ct-rating\">\n                                                                {Rating(item.rating)}\n                                                            </div>\n                                                            <span>Posted on: {review.date}</span>\n                                                            <p>{review.comment}College in Virginia</p>\n                                                            <Link to=\"#\" className=\"reply-link\"> Reply </Link>\n                                                        </div>\n                                                    </li>\n                                                ))}\n                                            </ul>\n                                        </div>\n                                        {/* Reviews End */}\n                                    </Tab.Pane>\n                                </Tab.Content>\n                            </Tab.Container>\n                        </div>\n                        {/* Additional Information End */}\n                    </div>\n                </div>\n                <Relatedproduct />\n            </Fragment>\n        );\n    }\n}\n\nexport default Content;","import React, { Component, Fragment } from 'react';\nimport MetaTags from \"react-meta-tags\";\nimport Header from '../layouts/Headerinner';\nimport Breadcrumbs from '../layouts/Breadcrumb';\nimport Footer from '../layouts/Footer';\nimport Content from '../sections/menu-item-v1/Content';\n\nconst pagelocation = 'Menu Item details'\n\nclass Menuitemone extends Component {\n    render() {\n        return (\n            <Fragment>\n                <MetaTags>\n                    <title>Tenali  doublehorse | {pagelocation}</title>\n                    <meta\n                        name=\"description\"\n                        content=\"#\"\n                    />\n                </MetaTags> \n                <Header/>\n                <Breadcrumbs breadcrumb={{ pagename: pagelocation }} />\n                <Content productId={this.props.match.params.id}/>\n                <Footer footer={{ style:\"ct-footer footer-dark\", logo:\"assets/img/transparent-logo.png\" }} />\n            </Fragment>\n        );\n    }\n}\n\nexport default Menuitemone;","import React from 'react';\n\nfunction Rating(rating) {\n    let stars = [];\n    for (let i = 0; i < 5; i++) {\n        stars.push(<i className=\"fa fa-star\" key={i}></i>);\n    }\n    if (rating && rating > 0) {\n        for (let i = 0; i <= rating ; i++) {\n            stars[i] = <i className=\"fa fa-star active\" key={i}></i>;\n        }\n    }\n    return stars;\n}\nexport { Rating };\n","import products from \"../data/product.json\";\n\nfunction getProduct(id) {\n    return products.filter(product => { return product.id === parseInt(id) })[0];\n}\n\n\nexport { getProduct };","import React, { Component, Fragment } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { getProduct } from '../../helper/Producthelper'\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\n// Import Swiper styles\r\n// import 'swiper/swiper.min.css';\r\nimport 'swiper/swiper-bundle.css';\r\nimport SwiperCore from 'swiper'\r\nimport { Autoplay } from 'swiper';\r\n\r\nSwiperCore.use([Autoplay]);\r\n\r\nclass Quickview extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            clicks: 1\r\n        };\r\n    }\r\n    IncrementItem = () => {\r\n        this.setState({ clicks: this.state.clicks + 1 });\r\n    };\r\n\r\n    DecreaseItem = () => {\r\n        if (this.state.clicks < 1) {\r\n            this.setState({\r\n                clicks: 0,\r\n            });\r\n        } else {\r\n            this.setState({\r\n                clicks: this.state.clicks - 1,\r\n            });\r\n        }\r\n    };\r\n    handleChange(event) {\r\n        this.setState({ clicks: event.target.value });\r\n    }\r\n    render() {\r\n        const productId = this.props.productId;\r\n        const item = getProduct(productId);\r\n        return (\r\n            <Fragment> \r\n                {/* <Modal.Header className=\"modal-bg mt-5 bg-warning\" closeButton style={{ backgroundImage: \"url(\" + process.env.PUBLIC_URL + \"/\" + item.img + \")\" }} /> */}\r\n                <Modal.Body>\r\n                    <div className=\"customize-meta product-popup-section \">\r\n                        <div className='popup-product-image-sec'>\r\n                        <Swiper\r\n                            spaceBetween={10}\r\n                            slidesPerView={1}\r\n                            onSlideChange={() => console.log('slide change')}\r\n                            onSwiper={(swiper) => console.log(swiper)}\r\n                            autoplay={{ delay: 1000 }}\r\n                            loop={true}\r\n                            >\r\n                            <SwiperSlide><img className=\"pr-pop-up-image\" src={process.env.PUBLIC_URL + \"/\" + item.img} alt={item.name} /></SwiperSlide>\r\n                            <SwiperSlide><img className=\"pr-pop-up-image\" src={process.env.PUBLIC_URL + \"/\" + item.img2} alt={item.name} /></SwiperSlide>\r\n                            <SwiperSlide><img className=\"pr-pop-up-image\" src={process.env.PUBLIC_URL + \"/\" + item.img3} alt={item.name} /></SwiperSlide>\r\n                            <SwiperSlide><img className=\"pr-pop-up-image\" src={process.env.PUBLIC_URL + \"/\" + item.img4} alt={item.name} /></SwiperSlide>\r\n                          \r\n                        </Swiper>\r\n                        {/* <img className=\"product-pop-up-img\" src={process.env.PUBLIC_URL + \"/\" + item.img}  /> */}\r\n                        </div>\r\n                        <div>\r\n                          <div className=''>\r\n                          <h4 className=\"customize-title\">{item.name}  </h4>\r\n                          <p>{item.shortdesc}</p>\r\n                          <h5><span className=\"custom-primary\">{new Intl.NumberFormat().format((item.price).toFixed(2))}₹</span></h5>\r\n                          <button type=\"button\" className=\"btn-custom btn-sm \">Order Now</button>   \r\n                          {/* <button type=\"button\" className=\"btn-custom btn-sm \">Order Now</button> */}\r\n                          </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <div className=\"customize-variations\">\r\n                        {/* <div className=\"customize-size-wrapper\">\r\n                            <h5>Size: </h5>\r\n                            {item.sizes.map((item, i) => (\r\n                                <div key={i} className={item.state ? 'customize-size active' : 'customize-size'}>\r\n                                    {item.size}\r\n                                </div>\r\n                            ))}\r\n                        </div> */}\r\n                        <div className=\"row\">\r\n                          \r\n                                {item.attributes.slice(0,3).map((item, i) => (\r\n                                    <div key={i} className=\"col-lg-4 col-12\">\r\n                                        <div className=\"customize-variation-wrapper\">\r\n                                            <i className={item.icon} />\r\n                                            <h5>{item.name}</h5>\r\n                                            {item.items.map((add, i) => (\r\n                                                <div key={i} className=\"customize-variation-item\">\r\n                                                    <div className={\"custom-control custom-\" + item.type}>\r\n                                                        <input type={item.type} id={add.title + i} name={item.name} className=\"custom-control-input\" />\r\n                                                        <label className=\"custom-control-label\" htmlFor={add.title + i}>{add.title}</label>\r\n                                                    </div>\r\n                                                    <span>+{new Intl.NumberFormat().format((add.addprice).toFixed(2))}$</span>\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    </div>   \r\n                                ))}\r\n                                {item.attributes.slice(0,3).map((item1, i) => (\r\n                                    <div key={i} className=\"col-lg-8 col-12\">\r\n                                         <div>\r\n                                            <h4>Description</h4>\r\n                                            <p>{item.longdescription}</p>\r\n                                         </div>\r\n                                    </div>\r\n                                ))}\r\n                        </div>\r\n                    </div>\r\n                    {/* <div className=\"customize-controls\">\r\n                        <div className=\"qty\">\r\n                            <span className=\"qty-subtract\" onClick={this.DecreaseItem}><i className=\"fa fa-minus\" /></span>\r\n                            <input type=\"text\" name=\"clicks\" value={this.state.clicks} onChange={this.handleChange.bind(this)} />\r\n                            <span className=\"qty-add\" onClick={this.IncrementItem}><i className=\"fa fa-plus\" /></span>\r\n                        </div>\r\n                        <div className=\"customize-total\" data-price={new Intl.NumberFormat().format((item.price).toFixed(2))}>\r\n                            <h5>Total Price: <span className=\"final-price custom-primary\">{new Intl.NumberFormat().format((item.price).toFixed(2))} <span>₹</span> </span> </h5>\r\n                        </div>\r\n                    </div> */}\r\n                    {/* <button type=\"button\" className=\"btn-custom btn-sm \">Order Now</button> */}\r\n                </Modal.Body>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Quickview;"],"sourceRoot":""}