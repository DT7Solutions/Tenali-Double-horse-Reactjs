{"version":3,"sources":["components/sections/blog-grid/Content.js","components/pages/Whereweare.js","components/layouts/Breadcrumb.js"],"names":["markers","markerOffset","name","coordinates","Content","_Component","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","apply","arguments","_inherits","_createClass","key","value","React","createElement","Fragment","ComposableMap","Geographies","geography","_ref","geographies","map","geo","Geography","rsmKey","fill","stroke","_ref2","Marker","Link","to","strokeWidth","strokeLinecap","strokeLinejoin","transform","cx","cy","r","d","textAnchor","y","style","fontFamily","Component","Bloggrid","MetaTags","content","Header","Breadcrumbs","breadcrumb","pagename","bannerimg","tagId","props","match","params","Footer","footer","logo","Breadcrumb","className","backgroundImage","concat","process","aria-label","aria-current"],"mappings":"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","file":"static/js/8.79308390.chunk.js","sourcesContent":["import React, { Component , Fragment} from 'react';\r\n\r\n\r\nimport { ComposableMap, Geographies, Geography ,Marker} from \"react-simple-maps\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst geoUrl =\"https://cdn.jsdelivr.net/npm/world-atlas@2/land-110m.json\"\r\n\r\nconst markers = [\r\n    {\r\n      markerOffset: -30,\r\n      name: \"India\",\r\n      coordinates: [78.9629, 20.5937], // India coordinates [longitude, latitude]\r\n    },\r\n    {\r\n      markerOffset: 15,\r\n      name: \"Australia\",\r\n      coordinates: [133.7751, -25.2744], // Australia coordinates [longitude, latitude]\r\n    },\r\n    \r\n    {\r\n      markerOffset: 15,\r\n      name: \"USA\",\r\n      coordinates: [-95.7129, 37.0902], // USA coordinates [longitude, latitude]\r\n    },\r\n    {\r\n      markerOffset:-30,\r\n      name: \"UK\",\r\n      coordinates: [-3.4359, 55.3781], // UK coordinates [longitude, latitude]\r\n    },\r\n    \r\n    {\r\n      markerOffset: -30,\r\n      name: \"UAE\",\r\n      coordinates: [54.366669, 24.466667], // UAE coordinates [longitude, latitude]\r\n    },\r\n    {\r\n      markerOffset: 15,\r\n      name: \"SINGAPORE\",\r\n      coordinates: [103.8198, 1.3521], // UAE coordinates [longitude, latitude]\r\n    },\r\n    {\r\n      markerOffset: 15,\r\n      name: \"QATAR\",\r\n      coordinates: [53.595284 ,16.564328], // UAE coordinates [longitude, latitude]\r\n    },\r\n    {\r\n      markerOffset: 15,\r\n      name: \"PARIS\",\r\n      coordinates: [2.3522, 48.8566], // UAE coordinates [longitude, latitude]\r\n    },\r\n    {\r\n      markerOffset: 15,\r\n      name: \"CANADA\",\r\n      coordinates: [-106.3468, 56.1304], // UAE coordinates [longitude, latitude]\r\n    },\r\n    {\r\n      markerOffset: 15,\r\n      name: \"GHANA-WEST AFRICA\",\r\n      coordinates: [-1.0232, 7.9465], // UAE coordinates [longitude, latitude]\r\n    },\r\n    {\r\n      markerOffset: 15,\r\n      name: \"SEYCHELLES\",\r\n      coordinates: [55.4919, -4.6796], // UAE coordinates [longitude, latitude]\r\n    },\r\n   \r\n  ];\r\n  \r\n\r\n\r\nclass Content extends Component {\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div>\r\n    <ComposableMap>\r\n      <Geographies geography={geoUrl}>\r\n        {({ geographies }) =>\r\n          geographies.map((geo) => (\r\n            <Geography key={geo.rsmKey} geography={geo} fill=\"#EAEAEC\"\r\n                                stroke=\"#D6D6DA\" />\r\n          ))\r\n        }\r\n      </Geographies>\r\n      {markers.map(({ name, coordinates, markerOffset }) => (\r\n              <Marker key={name} coordinates={coordinates}>\r\n                <g>\r\n                  {name === \"USA\" ? (\r\n                    <Link to=\"/contact\">\r\n                      <g\r\n                        fill=\"none\"\r\n                        stroke=\"#FF5533\"\r\n                        strokeWidth=\"2\"\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        transform=\"translate(-12, -24)\"\r\n                      >\r\n                        <circle cx=\"12\" cy=\"10\" r=\"3\" />\r\n                        <path d=\"M12 21.7C17.3 17 20 13 20 10a8 8 0 1 0-16 0c0 3 2.7 6.9 8 11.7z\" />\r\n                      </g>\r\n                      <text\r\n                        textAnchor=\"middle\"\r\n                        y={markerOffset}\r\n                        style={{ fontFamily: \"system-ui\", fill: \"#5D5A6D\" }}\r\n                      >\r\n                        {name}\r\n                      </text>\r\n                    </Link>\r\n                  ) : (\r\n                    <>\r\n                      <g\r\n                        fill=\"none\"\r\n                        stroke=\"#FF5533\"\r\n                        strokeWidth=\"2\"\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        transform=\"translate(-12, -24)\"\r\n                      >\r\n                        <circle cx=\"12\" cy=\"10\" r=\"3\" />\r\n                        <path d=\"M12 21.7C17.3 17 20 13 20 10a8 8 0 1 0-16 0c0 3 2.7 6.9 8 11.7z\" />\r\n                      </g>\r\n                      <text\r\n                        textAnchor=\"middle\"\r\n                        y={markerOffset}\r\n                        style={{ fontFamily: \"system-ui\", fill: \"#5D5A6D\" }}\r\n                      >\r\n                        {name}\r\n                      </text>\r\n                    </>\r\n                  )}\r\n                </g>\r\n              </Marker>\r\n            ))}\r\n      \r\n    </ComposableMap>\r\n  </div>\r\n                \r\n              \r\n                \r\n                \r\n   \r\n            \r\n      \r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Content;","import React, { Component, Fragment } from 'react';\r\nimport MetaTags from \"react-meta-tags\";\r\n// import Header from '../layouts/Headerinner';\r\nimport Header from '../layouts/Header';\r\nimport Breadcrumbs from '../layouts/Breadcrumb';\r\nimport Footer from '../layouts/Footer';\r\nimport Content from '../sections/blog-grid/Content';\r\n\r\nconst pagelocation = 'Where we are'\r\nconst bannerimg = \"/assets/img/banner/contact-header-banner.jpeg\"\r\nclass Bloggrid extends Component {\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <MetaTags>\r\n                    <title>Tenali  doublehorse | {pagelocation}</title>\r\n                    <meta\r\n                        name=\"description\"\r\n                        content=\"#\"\r\n                    />\r\n                </MetaTags> \r\n                <Header/>\r\n                <Breadcrumbs breadcrumb={{ pagename: pagelocation,bannerimg:bannerimg }} />\r\n                <Content tagId={this.props.match.params.tagId}/>\r\n                <Footer footer={{ style:\"ct-footer footer-dark\", logo:\"assets/img/transparent-logo.png\" }} />\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Bloggrid;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Breadcrumb extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"sub-header-breadcrumbs \" style={{ backgroundImage: `url(${process.env.PUBLIC_URL}${this.props.breadcrumb.bannerimg})` }}>\r\n                <div className=\"container\">\r\n                    <div className=\"subheader-inner\">\r\n                        <h1 className='text-light'>{this.props.breadcrumb.pagename}</h1>\r\n                        <nav aria-label=\"breadcrumb\">\r\n                            <ol className=\"breadcrumb\">\r\n                                <li className=\"breadcrumb-item \"><Link to=\"/\">Home</Link></li>\r\n                                <li className=\"breadcrumb-item active \" aria-current=\"page\">{this.props.breadcrumb.pagename}</li>\r\n                            </ol>\r\n                        </nav>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Breadcrumb;"],"sourceRoot":""}